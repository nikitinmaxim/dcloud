apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: kube-dns
  namespace: manager
spec:
  selector:
    matchLabels:
      name: kube-dns
  template:
    metadata:
      name: kube-dns
      labels:
        name: kube-dns
    spec:
      volumes:
        - name: kubeconfig
          hostPath:
            path: /data/conf/kubeconfig
        - name: certs
          hostPath:
            path: /data/cert
        - name: etc-ssl
          hostPath:
            path: /etc/ssl
      containers:
        - name: kube-dns
          image: {{ .Values.global.repository }}/kubedns:{{ .Values.global.imageTag }}
          args:
            - --domain=cluster.local.
            - --dns-port=10053
            - --kubecfg-file=/data/conf/kubeconfig
            - --config-map=kube-dns-config
            - --config-map-namespace=manager
          volumeMounts:
            - name: kubeconfig
              mountPath: /data/conf/kubeconfig
            - name: certs
              mountPath: /data/cert
            - name: etc-ssl
              mountPath: /etc/ssl
          ports:
            - name: dns
              containerPort: 10053
              protocol: UDP
            - name: dns-tcp
              containerPort: 10053
              protocol: TCP
        - name: kube-dnsmasq
          image: {{ .Values.global.repository }}/dnsmasq:{{ .Values.global.imageTag }}
          args:
            - --port=54
            - --cache-size=1000
            - --no-resolv
            - --server=/cluster.local./127.0.0.1#10053
            - --server=127.0.0.1
            - --log-facility=-
          ports:
            - name: dns
              containerPort: 54
              protocol: UDP
            - name: dns-tcp
              containerPort: 54
              protocol: TCP
          securityContext:
            privileged: true
      serviceAccount: dns-service-account
      restartPolicy: Always
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      tolerations:
        - key: "dedicated"
          value: "kube-manager"
      nodeSelector:
        role: manager
