apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}-master

  labels:
    component: {{ template "fullname" . }}
    role: master
spec:
  replicas: {{ .Values.master.replicas }}
  template:
    metadata:
      labels:
        component: {{ template "fullname" . }}
        role: master
      annotations:
        # Elasticsearch uses a hybrid mmapfs / niofs directory by default to
        # store its indices. The default operating system limits on mmap counts
        # is likely to be too low, which may result in out of memory exceptions,
        # so we use vm.max_map_count=262144 to increase that value.
        pod.beta.kubernetes.io/init-containers: '[
          {
          "name": "sysctl",
            "image": "{{ .Values.global.repository }}/busybox:{{ .Values.global.imageTag }}",
            "imagePullPolicy": "IfNotPresent",
            "command": ["sysctl", "-w", "vm.max_map_count=262144"],
            "securityContext": {
              "privileged": true
            }
          }
        ]'
    spec:
    {{- if eq .Values.master.antiAffinity "hard" }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  component: {{ template "fullname" . }}
                  role: master
      {{- else if eq .Values.master.antiAffinity "soft" }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  component: {{ template "fullname" . }}
                  role: master
      {{- end }}
      containers:
      - name: es-master
        securityContext:
          privileged: false
          capabilities:
            add:
              - IPC_LOCK
              - SYS_RESOURCE
        image: "{{ .Values.global.repository }}/elasticsearch:{{ .Values.global.imageTag }}"
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONFIG
          value: "/usr/share/elasticsearch/config/elasticsearch.yml"
        - name: XPACK_SECURITY_ENABLED
          value: "false"
        - name: DISCOVERY_SERVICE
          value: {{ template "fullname" . }}-discovery
        {{- range $key, $value :=  .Values.common.env }}
        - name: {{ $key | upper | replace "-" "_" }}
          value: {{ $value | quote }}
        {{- end }}
        {{- range $key, $value :=  .Values.master.env }}
        - name: {{ $key | upper | replace "-" "_" }}
          value: {{ $value | quote }}
        {{- end }}
        ports:
        - containerPort: 9300
          name: transport
          protocol: TCP
      tolerations:
{{ toYaml .Values.global.tolerations | indent 9 }}
